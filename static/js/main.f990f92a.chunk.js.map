{"version":3,"sources":["components/Typer.tsx","App.tsx","index.tsx"],"names":["Typer","inputRef","useRef","useState","typedText","setTypedText","onClick","current","focus","style","position","maxWidth","fontSize","width","color","top","left","pointerEvents","ref","onChange","ev","target","value","App","display","placeItems","backgroundColor","height","ReactDOM","render","document","getElementById"],"mappings":"kKAwDeA,MApDf,WACE,IAAMC,EAAWC,iBAAgC,MADlC,EAEmBC,mBAAS,IAF5B,mBAERC,EAFQ,KAEGC,EAFH,KAQf,OACE,kBAAC,WAAD,KACE,yBACEC,QAPa,WACbL,GAAYA,EAASM,SAASN,EAASM,QAAQC,SAO/CC,MAAO,CACLC,SAAU,WACVC,SAAU,IACVC,SAAU,uBAGZ,yBACEH,MAAO,CACLI,MAAO,OACPC,MAAO,SAvBG,0LA4Bd,yBACEL,MAAO,CACLC,SAAU,WACVK,IAAK,EACLC,KAAM,EACNC,cAAe,OACfJ,MAAO,OACPC,MAAO,UAGPV,IAGN,2BACEc,IAAKjB,EACLkB,SAAU,SAACC,GAAD,OAAQf,EAAae,EAAGC,OAAOC,QACzCb,MAAO,CACLC,SAAU,WACVK,IAAK,YACLC,KAAM,iBC9BDO,MAhBf,WACE,OACE,0BACEd,MAAO,CACLe,QAAS,OACTC,WAAY,SACZC,gBAAiB,UACjBC,OAAQ,QACRb,MAAO,UAGT,kBAAC,EAAD,QCTNc,IAASC,OACN,kBAAC,EAAD,MACDC,SAASC,eAAe,U","file":"static/js/main.f990f92a.chunk.js","sourcesContent":["import React, { useRef, useState, Fragment } from 'react'\n\nconst dummyTestText = 'bacon ipsum dolor amet hamburger pork chop tongue meatball turkey swine tenderloin ham bresaola capicola chislic ham hock biltong cupim jowl picanha brisket turducken pork chop filet'\n\nfunction Typer() {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [typedText, setTypedText] = useState('')\n\n  const focusInput = () => {\n    if (inputRef && inputRef.current) inputRef.current.focus()\n  }\n\n  return (\n    <Fragment>\n      <div\n        onClick={ focusInput }\n        style={{\n          position: 'relative',\n          maxWidth: 720,\n          fontSize: 'calc(10px + 2vmin)'\n        }}\n      >\n        <div\n          style={{\n            width: '100%',\n            color: 'gray'\n          }}\n        >\n          { dummyTestText }\n        </div>\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            pointerEvents: 'none',\n            width: '100%',\n            color: 'wheat'\n          }}\n        >\n          { typedText }\n        </div>\n      </div>\n      <input\n        ref={inputRef}\n        onChange={(ev) => setTypedText(ev.target.value)}\n        style={{\n          position: 'absolute',\n          top: '-999999px',\n          left: '-999999px'\n        }}\n      />\n    </Fragment>\n  )\n}\n\nexport default Typer\n","import React from 'react'\nimport Typer from './components/Typer'\n\nfunction App() {\n  return (\n    <main\n      style={{\n        display: 'grid',\n        placeItems: 'center',\n        backgroundColor: '#282c34',\n        height: '100vh',\n        color: 'white'\n      }}\n    >\n      <Typer />\n    </main>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  (<App />),\n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}